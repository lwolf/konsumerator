language: go
go:
  - 1.13.x

env:
  - GO111MODULE=on

# needed for the docker pipe
services:
  - docker

jobs:
  include:
    - stage: Integration Tests
      before_script:
        # Download and install kubectl
        - export KUBEBUILDER_ASSETS=/usr/local/bin
        - curl -vLO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
        - curl -vLO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kube-apiserver && chmod +x kube-apiserver && sudo mv kube-apiserver /usr/local/bin/
        - bash hack/download_etcd.sh v3.3.13 /usr/local/bin
      script: make test
      after_success:
        - bash <(curl -s https://codecov.io/bash)

    # Travic-kind setup borrowed from https://github.com/xmudrii/travis-kind
#    - stage: Functional Tests
#      before_script:
#        # Download and install kubectl
#        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
#
#        # Download and install KinD
#        - GO111MODULE=on go get sigs.k8s.io/kind
#        # It's possible to download and install KinD using curl, similar as for kubectl
#        # This is useful in cases when Go toolchain isn't available or you prefer running stable version
#        # Binaries for KinD are available on GitHub Releases: https://github.com/kubernetes-sigs/kind/releases
#        # - curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/0.0.1/kind-linux-amd64 && chmod +x kind && sudo mv kind /usr/local/bin/
#
#        # Create a new Kubernetes cluster using KinD
#        - kind create cluster
#
#        # Set KUBECONFIG environment variable
#        - export KUBECONFIG="$(kind get kubeconfig-path)"
#        - export USE_EXISTING_CLUSTER="true"
#      script: make test
#    - stage: Build docker containers
#      script:
#        - docker build -t quay.io/lwolf/konsumerator:$TRAVIS_BRANCH-$TRAVIS_COMMIT -f Dockerfile-builder .
#        - docker push quay.io/lwolf/konsumerator:$TRAVIS_BRANCH-$TRAVIS_COMMIT
#      on:
#        tags: false
    - stage: GitHub Release
      before_script:
        - echo "$QUAY_PASSWORD" | docker login -u "$QUAY_LOGIN" quay.io --password-stdin
        - echo "$GITHUB_TOKEN" | docker login -u "$GITHUB_LOGIN" docker.pkg.github.com --password-stdin
      deploy:
        provider: script
        skip_cleanup: true
        script: curl -sL http://git.io/goreleaser | bash
        on:
          tags: true
          condition: $TRAVIS_OS_NAME = linux
